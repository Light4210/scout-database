security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        #user
        - { path: /user/\d+, roles: IS_AUTHENTICATED_FULLY}
        - { path: /user/create, roles: IS_AUTHENTICATED_FULLY }
        - { path: /user/\d+/edit, roles: IS_AUTHENTICATED_FULLY}
        - { path: /user/\d+/remove, roles: IS_AUTHENTICATED_FULLY}
        - { path: /user/list, roles: IS_AUTHENTICATED_FULLY }
        - { path: /user/promote/decline/\d+/\d+, roles: IS_AUTHENTICATED_FULLY }
        - { path: /user/promote/approve/\d+/\d+, roles: IS_AUTHENTICATED_FULLY }
        - { path: /ajax/promotion/\d+/structs, roles: IS_AUTHENTICATED_FULLY }
        - { path: /ajax/promotion/\d+/\d+, roles: IS_AUTHENTICATED_FULLY }
        #struct
        - { path: /struct/\d+, roles: IS_AUTHENTICATED_FULLY}
        - { path: /struct/\d+/request-join, roles: IS_AUTHENTICATED_FULLY}
        - { path: /struct/\d+/leave, roles: IS_AUTHENTICATED_FULLY}
        - { path: /struct/create, roles: IS_AUTHENTICATED_FULLY }
        - { path: /struct/\d+/edit, roles: IS_AUTHENTICATED_FULLY}
        - { path: /struct/list, roles: IS_AUTHENTICATED_FULLY}
        #invite
        - { path: /games/\d+/edit, roles: IS_AUTHENTICATED_FULLY }
        - { path: /games/list, roles: IS_AUTHENTICATED_FULLY }
        - { path: /games/create, roles: IS_AUTHENTICATED_FULLY }
        - { path: /games/\d+, roles: IS_AUTHENTICATED_FULLY }
        - { path: /invite/\d+/approve, roles: IS_AUTHENTICATED_FULLY }
        - { path: /invite/\d+/delete, roles: IS_AUTHENTICATED_FULLY }
